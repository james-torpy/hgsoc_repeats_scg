if ("repeats" %in% resultTypes) {
# define repeat and sig DE repeat dfs:
repGenes <- allGenes[grep("ENS",  rownames(allGenes), invert = T),]
print(repGenes)
if (length(FCthresh) == 0) {
sigGenes <- filter(repGenes, FDR < FDRthresh)
repGenes$threshold <- as.factor(repGenes$FDR < FDRthresh)
} else {
sigGenes <- filter(repGenes, (FDR < FDRthresh & logFC < -(FCthresh))|(FDR < FDRthresh & logFC > FCthresh))
repGenes$threshold <- as.factor((repGenes$FDR < FDRthresh & repGenes$logFC < -(FCthresh))|(repGenes$FDR <  FDRthresh & repGenes$logFC > FCthresh))
}
sig <- subset(repGenes, threshold == T)
# include the control genes for labelling:
for (j in 1:length(posGeneIDs)) {
if (j==1) {
posGenes <- allGenes[ posGeneIDs[j],]
} else {
posGenes <- rbind(posGenes,   allGenes[posGeneIDs[j],])
}
}
rownames(posGenes) <- posGeneNames
for (j in 1:length(negGeneIDs)) {
if (j==1) {
negGenes <- allGenes[ negGeneIDs[j],]
} else {
negGenes <- rbind(negGenes,   allGenes[negGeneIDs[j],])
}
}
rownames(negGenes) <- negGeneNames
# set default threshold statuses  for control genes:
posGenes$threshold <- "POSITIVE"
if (nrow(posGenes[posGenes$FDR< FDRthresh,])>0) {
posGenes[posGenes$FDR<  FDRthresh,]$threshold <- "POSSIG"
}
negGenes$threshold = "NEGATIVE"
if (nrow(negGenes[negGenes$FDR< FDRthresh,])>0) {
negGenes[negGenes$FDR<  FDRthresh,]$threshold <-  "NEGSIG"
}
lab <- rbind(rbind(sig,   posGenes), negGenes)
repGenes <- rbind(rbind(repGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
if (!(ctlInd==1)) {
if (i==1) {
allReps <- list(repGenes)
} else {
allReps[[i]] <- repGenes
}
if (i==1) {
sigReps <- list(sig)
} else {
sigReps[[i]] <- sig
}
} else {
if (i==2) {
allReps <- list(repGenes)
} else {
allReps[[i]] <- repGenes
}
if (i==2) {
sigReps <- list(sig)
} else {
sigReps[[i]] <- sig
}
}
# plot on volcano plot:
p <- ggplot(data=repGenes, aes( x=logFC, y=-log10(FDR),    color=threshold))
p <- p + geom_point(data=repGenes)
p <- p + geom_text_repel(data=lab, aes(label=genes))
p <- p + theme(legend.position =  "none")
p <- p + labs(x="log2 fold change   vs FT control", y="-log10   FDR")
p <- p +  xlim(c(-4, 4))
if (length(FCthresh) == 0) {
if (file.exists(paste0(plotDir,   "/", Type,  "_volcano_FDR_",   FDRthresh, "_", comp, ".pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_",   FDRthresh, "_", comp, ".pdf"))
p
} else {
print(paste0("Creating  ",plotDir, "/", Type,    "_volcano_FDR_", FDRthresh, "_", comp, ".pdf"))
pdf(file = paste0(plotDir, "/",   Type,  "_volcano_FDR_",  FDRthresh, "_", comp, ".pdf"))
print(p)
dev.off()
}
} else {
if (file.exists(paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, ".pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, ".pdf already exists"))
p
} else {
print(paste0("Creating  ", plotDir, "/",  Type,  "_volcano_FDR", FDRthresh, "_FC", FCthresh, "_", comp, ".pdf"))
pdf(file = paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, ".pdf"))
print(p)
dev.off()
}
}
if ("epiMods" %in% resultTypes) {
### 6. Calculate differential expression values of epigenetic modifier genes ###
# create epiGenes df:
epiGenes <- allGenes[epiIDs,]
rownames(epiGenes) <- epiSym
# set threshold status:
if (length(FCthresh) == 0) {
epiGenes$threshold <- as.factor(epiGenes$FDR < FDRthresh)
} else {
epiGenes$threshold <- as.factor((epiGenes$FDR < FDRthresh & epiGenes$logFC < -(FCthresh))|(epiGenes$FDR <
FDRthresh & epiGenes$logFC > FCthresh))
}
# create significant epiGenes df:
epiSig <- subset(epiGenes, threshold == T)
epiGenes$genes <- rownames(epiGenes)
if (!(ctlInd==1)) {
if (i==1) {
allEpi <- list(epiGenes)
} else {
allEpi[[i]] <- epiGenes
}
} else {
if (i==2) {
allEpi <- list(epiGenes)
} else {
allEpi[[i]] <- epiGenes
}
}
# create volcano plots with repeat values in grey in background:
p <- ggplot(data=epiGenes, aes(x=logFC, y=-log10(FDR),color=threshold))
p <- p + geom_point(data=epiGenes)
p <- p + geom_text_repel(data=epiGenes, aes(label=genes))
p <- p + theme(legend.position = "none")
p <- p + labs(x="log2 fold change vs FT control", y="-log10   FDR")
p <- p +  xlim(c(-2, 2))
if (length(FCthresh) == 0) {
if (file.exists(paste0(plotDir,   "/", Type,  "_volcano_FDR_",   FDRthresh, "_", comp, "_epi.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_",   FDRthresh, "_", comp, "_epi.pdf"))
p
} else {
print(paste0("Creating  ",plotDir, "/", Type,    "_volcano_FDR_", FDRthresh, "_", comp, "_epi.pdf"))
pdf(file = paste0(plotDir, "/",   Type,  "_volcano_FDR_",  FDRthresh, "_", comp, "_epi.pdf"))
print(p)
dev.off()
}
} else {
if (file.exists(paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, "_epi.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, "_epi.pdf already exists"))
p
} else {
print(paste0("Creating  ", plotDir, "/",  Type,  "_volcano_FDR", FDRthresh, "_FC", FCthresh, "_", comp, "_epi.pdf"))
pdf(file = paste0(plotDir, "/",  Type,  "_volcano_FDR",   FDRthresh, "_FC", FCthresh, "_", comp, "_epi.pdf"))
print(p)
dev.off()
}
}
}
}
con <- c(rep(0, (ctlInd - 1) ), -1, rep(0, (ncol(design) - ctlInd)))
}
}
if ("all" %in% resultTypes) {
if (length(FCthresh) == 0) {
sigGenes <- filter(allGenes, FDR < FDRthresh)
allGenes$threshold <- as.factor(allGenes$FDR < FDRthresh)
} else {
sigGenes <- filter(allGenes, (FDR < FDRthresh & logFC < -(FCthresh))|(FDR < FDRthresh & logFC > FCthresh))
allGenes$threshold <- as.factor((allGenes$FDR < FDRthresh & allGenes$logFC < -(FCthresh))|(allGenes$FDR <  FDRthresh & allGenes$logFC > FCthresh))
}
sig <- subset(allGenes, threshold == T)
# include the control genes for labelling:
for (j in 1:length(posGeneIDs)) {
if (j==1) {
posGenes <- allGenes[ posGeneIDs[j],]
} else {
posGenes <- rbind(posGenes,   allGenes[posGeneIDs[j],])
}
}
rownames(posGenes) <- posGeneNames
for (j in 1:length(negGeneIDs)) {
if (j==1) {
negGenes <- allGenes[ negGeneIDs[j],]
} else {
negGenes <- rbind(negGenes,   allGenes[negGeneIDs[j],])
}
}
rownames(negGenes) <- negGeneNames
# set default threshold statuses  for control genes:
posGenes$threshold <- "POSITIVE"
if (nrow(posGenes[posGenes$FDR< FDRthresh,])>0) {
posGenes[posGenes$FDR<  FDRthresh,]$threshold <- "POSSIG"
}
negGenes$threshold = "NEGATIVE"
if (nrow(negGenes[negGenes$FDR< FDRthresh,])>0) {
negGenes[negGenes$FDR<  FDRthresh,]$threshold <-  "NEGSIG"
}
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[( lab$logFC > 10 | lab$logFC < -10 | lab$FDR < 10e-15 ),]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
# add gene symbol annotations where relevant:
egENSEMBL <- toTable(org.Hs.egENSEMBL)
egSYMBOL <- toTable(org.Hs.egSYMBOL)
# for rows with ensembl ids, annotate entrez ids and symbols in separate columns
# for lab and sig:
lab$gene_id <- egENSEMBL$gene_id[match(rownames(lab), egENSEMBL$ensembl_id)]
lab$symbol <- egSYMBOL$symbol[match(lab$gene_id, egSYMBOL$gene_id)]
sig$gene_id <- egENSEMBL$gene_id[match(rownames(sig), egENSEMBL$ensembl_id)]
sig$symbol <- egSYMBOL$symbol[match(sig$gene_id, egSYMBOL$gene_id)]
allGenes$gene_id <- egENSEMBL$gene_id[match(rownames(allGenes), egENSEMBL$ensembl_id)]
allGenes$symbol <- egSYMBOL$symbol[match(allGenes$gene_id, egSYMBOL$gene_id)]
if (!(ctlInd==1)) {
if (i==1) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==1) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
} else {
if (i==2) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==2) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
}
# save CCNEamp_vs_HRD for comparison with Patch 2015 data:
if ( comp == "CCNEamp_vs_HRD") {
saveRDS(allGenes, paste0(newRobjectDir, "/CCNEamp_vs_HRD_allGenes.rds"))
saveRDS(sig, paste0(newRobjectDir, "/CCNEamp_vs_HRD_sig.rds"))
write.table(DEs, file=paste0(plotDir, "/DE_CCNEamp_vs_HRD.txt"), row.names = F, col.names = F, quote = F, sep = "\t")
}
# plot on volcano plot:
p <- ggplot(data=allGenes, aes( x=logFC, y=-log10(FDR), color=threshold) )
p <- p + geom_point(data=allGenes)
p <- p + geom_text_repel(data=lab, aes(label=symbol))
p <- p + theme(legend.position =  "none")
p <- p + labs(x="log2 fold change   vs FT control", y="-log10   FDR")
if (length(FCthresh) == 0) {
if (file.exists(paste0(plotDir,   "/", Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
p
} else {
print(paste0("Creating  ",plotDir, "/", Type,    "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",   Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
} else {
if (file.exists(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf already exists"))
p
} else {
print(paste0("Creating  ", plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
}
}
library(org.Hs.eg.db)
if (length(FCthresh) == 0) {
sigGenes <- filter(allGenes, FDR < FDRthresh)
allGenes$threshold <- as.factor(allGenes$FDR < FDRthresh)
} else {
sigGenes <- filter(allGenes, (FDR < FDRthresh & logFC < -(FCthresh))|(FDR < FDRthresh & logFC > FCthresh))
allGenes$threshold <- as.factor((allGenes$FDR < FDRthresh & allGenes$logFC < -(FCthresh))|(allGenes$FDR <  FDRthresh & allGenes$logFC > FCthresh))
}
sig <- subset(allGenes, threshold == T)
# include the control genes for labelling:
for (j in 1:length(posGeneIDs)) {
if (j==1) {
posGenes <- allGenes[ posGeneIDs[j],]
} else {
posGenes <- rbind(posGenes,   allGenes[posGeneIDs[j],])
}
}
rownames(posGenes) <- posGeneNames
for (j in 1:length(negGeneIDs)) {
if (j==1) {
negGenes <- allGenes[ negGeneIDs[j],]
} else {
negGenes <- rbind(negGenes,   allGenes[negGeneIDs[j],])
}
}
rownames(negGenes) <- negGeneNames
# set default threshold statuses  for control genes:
posGenes$threshold <- "POSITIVE"
if (nrow(posGenes[posGenes$FDR< FDRthresh,])>0) {
posGenes[posGenes$FDR<  FDRthresh,]$threshold <- "POSSIG"
}
negGenes$threshold = "NEGATIVE"
if (nrow(negGenes[negGenes$FDR< FDRthresh,])>0) {
negGenes[negGenes$FDR<  FDRthresh,]$threshold <-  "NEGSIG"
}
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[( lab$logFC > 10 | lab$logFC < -10 | lab$FDR < 10e-15 ),]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
nrow(lab)
head(lab)
tail(lab)
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[( lab$logFC > 10 | lab$logFC < -10 | lab$FDR < 10e-20 ),]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
nrow(lab)
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[( lab$logFC > 10 | lab$logFC < -10 | lab$FDR < 10e-30 ),]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
nrow(lab)
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[( lab$logFC > 10 | lab$logFC < -10 | lab$FDR < 10e-50 ),]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
head(allGenes)
nrow(lab)
head(lab)
lab$FDR < 10e-50
lab <- rbind(rbind(sig, posGenes), negGenes)
lab[lab$FDR < 10e-50, ]
lab[lab$FDR < 10e-20, ]
lab[lab$FDR < 10e-10, ]
nrow(lab[lab$FDR < 10e-10, ])
nrow(lab[lab$FDR < 10e-15, ])
plotDir
nrow(lab[lab$FDR < 10e-17, ])
nrow(lab[lab$FDR < 10e-13, ])
lab <- rbind(rbind(sig, posGenes), negGenes)
lab <- lab[lab$FDR < 10e-13, ]
allGenes <- rbind(rbind(allGenes,   posGenes), negGenes)
lab$genes <- rownames(lab)
# add gene symbol annotations where relevant:
egENSEMBL <- toTable(org.Hs.egENSEMBL)
egSYMBOL <- toTable(org.Hs.egSYMBOL)
# for rows with ensembl ids, annotate entrez ids and symbols in separate columns
# for lab and sig:
lab$gene_id <- egENSEMBL$gene_id[match(rownames(lab), egENSEMBL$ensembl_id)]
lab$symbol <- egSYMBOL$symbol[match(lab$gene_id, egSYMBOL$gene_id)]
sig$gene_id <- egENSEMBL$gene_id[match(rownames(sig), egENSEMBL$ensembl_id)]
sig$symbol <- egSYMBOL$symbol[match(sig$gene_id, egSYMBOL$gene_id)]
allGenes$gene_id <- egENSEMBL$gene_id[match(rownames(allGenes), egENSEMBL$ensembl_id)]
allGenes$symbol <- egSYMBOL$symbol[match(allGenes$gene_id, egSYMBOL$gene_id)]
if (!(ctlInd==1)) {
if (i==1) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==1) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
} else {
if (i==2) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==2) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
}
# save CCNEamp_vs_HRD for comparison with Patch 2015 data:
if ( comp == "CCNEamp_vs_HRD") {
saveRDS(allGenes, paste0(newRobjectDir, "/CCNEamp_vs_HRD_allGenes.rds"))
saveRDS(sig, paste0(newRobjectDir, "/CCNEamp_vs_HRD_sig.rds"))
write.table(DEs, file=paste0(plotDir, "/DE_CCNEamp_vs_HRD.txt"), row.names = F, col.names = F, quote = F, sep = "\t")
}
# plot on volcano plot:
p <- ggplot(data=allGenes, aes( x=logFC, y=-log10(FDR), color=threshold) )
p <- p + geom_point(data=allGenes)
p <- p + geom_text_repel(data=lab, aes(label=symbol))
p <- p + theme(legend.position =  "none")
p <- p + labs(x="log2 fold change   vs FT control", y="-log10   FDR")
if (length(FCthresh) == 0) {
if (file.exists(paste0(plotDir,   "/", Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
p
} else {
print(paste0("Creating  ",plotDir, "/", Type,    "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",   Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
} else {
if (file.exists(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf already exists"))
p
} else {
print(paste0("Creating  ", plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
}
project <- "hgsoc_repeats"
expName <- "exp9"
Type <- "custom3"
sTypes <- c("FT", "HGSOC")
descrip <- "SalmonTE_HGSOC_vs_FT"
#sTypes <- c("FT", "recurrent_ascites", "primary_resistant", "refractory",
#            "acquired_resistant", "multiple_responder", "extreme_responder",
#            "metastatic")
#descrip <- "htseq_hgsoc_split_more_by_drug_response_vs_FT"
# define sample groups to compare:
sGroups <- list("FT", c("prPT", "rfPT", "arPT", "mrPT", "erPT", "rcAF", "msST"))
names(sGroups) <- sTypes
cat_by_driver <- FALSE
# define sample group to use as control:
ctl <- "FT"
# specify what combination of repeat genes (repeats), epigenetic modulators (epiMods),
# RNAi genes (RNAi) and protein-coding genes (pCoding) should contribute to the results:
#resultTypes <- c("repeats", "epiMods")
resultTypes <- c("all", "repeats")
# specify what FDR and log2 fold change thresholds to use:
FDRthresh <- 0.05
FCthresh <- 0
# specify control genes to include:
posGeneIDs <- c("ENSG00000111640", "ENSG00000196776")
posGeneNames <- c("GAPDH", "CD47")
negGeneIDs <- c("ENSG00000075624", "ENSG00000169919")
negGeneNames <- c("beta-actin", "GUSB")
# specify epigenetic modifier genes to include if necessary:
epiIDs <- c("ENSG00000130816", "ENSG00000119772", "ENSG00000088305", "ENSG00000276043",
"ENSG00000138336", "ENSG00000168769", "ENSG00000187605", "ENSG00000101945")
epiSym <- c("DNMT1", "DNMT3A", "DNMT3B", "UHRF1", "TET1", "TET2", "TET3", "SUV39H1")
# define directories:
homeDir <- "/Users/jamestorpy/clusterHome/"
#homeDir <- "/share/ScratchGeneral/jamtor/"
projectDir <- paste0(homeDir, "/projects/", project)
rawDir <- paste0("/Users/jamestorpy/clusterHome2/projects/hgsoc_repeats/RNA-seq/raw_files")
resultsDir <- paste0(projectDir, "/RNA-seq/results")
RobjectDir <- paste0(projectDir, "/RNA-seq/Robjects/",
expName, "/")
newRobjectDir <- paste0(projectDir, "/RNA-seq/Robjects/",
expName, "/", descrip, "/")
plotDir <- paste0(resultsDir, "/R/", expName,
"/plots/DEplots/", descrip, "/")
system(paste0("mkdir -p ", plotDir))
system(paste0("mkdir -p ", newRobjectDir))
# add gene symbol annotations where relevant:
egENSEMBL <- toTable(org.Hs.egENSEMBL)
egSYMBOL <- toTable(org.Hs.egSYMBOL)
# for rows with ensembl ids, annotate entrez ids and symbols in separate columns
# for lab and sig:
lab$gene_id <- egENSEMBL$gene_id[match(rownames(lab), egENSEMBL$ensembl_id)]
lab$symbol <- egSYMBOL$symbol[match(lab$gene_id, egSYMBOL$gene_id)]
sig$gene_id <- egENSEMBL$gene_id[match(rownames(sig), egENSEMBL$ensembl_id)]
sig$symbol <- egSYMBOL$symbol[match(sig$gene_id, egSYMBOL$gene_id)]
allGenes$gene_id <- egENSEMBL$gene_id[match(rownames(allGenes), egENSEMBL$ensembl_id)]
allGenes$symbol <- egSYMBOL$symbol[match(allGenes$gene_id, egSYMBOL$gene_id)]
if (!(ctlInd==1)) {
if (i==1) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==1) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
} else {
if (i==2) {
allGenesList <- list(allGenes)
} else {
allGenesList[[i]] <- allGenes
}
if (i==2) {
sigGenesList <- list(sig)
} else {
sigGenesList[[i]] <- sig
}
}
# save CCNEamp_vs_HRD for comparison with Patch 2015 data:
if ( comp == "CCNEamp_vs_HRD") {
saveRDS(allGenes, paste0(newRobjectDir, "/CCNEamp_vs_HRD_allGenes.rds"))
saveRDS(sig, paste0(newRobjectDir, "/CCNEamp_vs_HRD_sig.rds"))
write.table(DEs, file=paste0(plotDir, "/DE_CCNEamp_vs_HRD.txt"), row.names = F, col.names = F, quote = F, sep = "\t")
}
# plot on volcano plot:
p <- ggplot(data=allGenes, aes( x=logFC, y=-log10(FDR), color=threshold) )
p <- p + geom_point(data=allGenes)
p <- p + geom_text_repel(data=lab, aes(label=symbol))
p <- p + theme(legend.position =  "none")
p <- p + labs(x="log2 fold change   vs FT control", y="-log10   FDR")
if (length(FCthresh) == 0) {
if (file.exists(paste0(plotDir,   "/", Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
p
} else {
print(paste0("Creating  ",plotDir, "/", Type,    "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",   Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
} else {
if (file.exists(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))) {
print(paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf already exists"))
p
} else {
print(paste0("Creating  ", plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
pdf(file = paste0(plotDir, "/",  Type,  "_volcano_FDR_10e_neg15_", comp, "_allGenes.pdf"))
print(p)
dev.off()
}
}
