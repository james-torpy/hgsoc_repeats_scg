
#############################################################
### 0. Set up variables and paths ###
#############################################################

import os
import re
import glob
os.system('module load gi/zlib/1.2.8')
os.system('module load phuluu/samtools/1.4')
os.system('module load gi/novosort/precompiled/1.03.08')

project_name = 'hgsoc_repeats'
exp_name = 'RNA-seq'

# define/create directories:
home_dir = '/share/ScratchGeneral/jamtor/'
project_dir = home_dir + 'projects/' + project_name + '/' + exp_name + '/'
results_dir = project_dir + 'results/'
ref_dir = project_dir + 'refs/'

raw_files = project_dir + 'raw_files/'
if not os.path.exists(project_dir + raw_files):
	os.makedirs(project_dir + raw_files)

star_GC_dir = 'results/star/GC/'
if not os.path.exists(project_dir + star_GC_dir):
	os.makedirs(project_dir + '/' + star_GC_dir)

star_ribo_dir = 'results/star/ribo/'
if not os.path.exists(project_dir + star_GC_dir):
	os.makedirs(project_dir + star_ribo_dir)

temp_sort_dir = star_GC_dir + 'temp/'
if not os.path.exists(project_dir + temp_sort_dir):
	os.makedirs(project_dir + temp_sort_dir)

htseq_dir = 'results/' + 'htseq/'
if not os.path.exists(project_dir + htseq_dir):
	os.makedirs(project_dir + htseq_dir)

Robject_dir = 'Robjects/' + exp_name
if not os.path.exists(project_dir + Robject_dir):
	os.makedirs(project_dir + Robject_dir)
	
SAMPLES = [ re.sub('\\_[0-9].fastq.gz', '', os.path.basename(x)) for x in 
	glob.glob(raw_files + '*.fastq.gz') ]
#SAMPLES = [ 'FT1', 'prPT1' ]

print(' '.join(SAMPLES))


#############################################################
### 1. Map fastq files ###
#############################################################

rule all:
	input:
#		expand(star_GC_dir + '{sample}/Aligned.novosortedByName.out.bam', \
#			sample=SAMPLES),
		expand(star_ribo_dir + '{sample}/Log.final.out', \
			sample=SAMPLES),
		expand(htseq_dir + '{sample}.all.htseq.txt', \
			sample=SAMPLES),
		expand(htseq_dir + '{sample}.gc.htseq.txt', \
			sample=SAMPLES),
		expand(htseq_dir + '{sample}.custom3.htseq.txt', \
			sample=SAMPLES)

rule star:
	input:
		fq1 = raw_files + '{sample}_1.fastq.gz',
		fq2 = raw_files + '{sample}_2.fastq.gz'
	output:
		star_GC_dir + '{sample}/Aligned.out.bam',
		star_GC_dir + '{sample}/Log.final.out',
		star_GC_dir + '{sample}/Chimeric.out.junction',
		star_GC_dir + '{sample}/Chimeric.out.sam'
	threads: 6
	shell:
		'/home/jamtor/local/bin/STAR --runMode alignReads ' +
      	' --readFilesCommand zcat ' +
	    '--genomeDir ' + ref_dir + 
	    ' --outFilterType BySJout ' +
	    '--outSAMattributes NH HI AS NM MD ' +
	    '--outFilterMultimapNmax 999 ' +
	    '--outMultimapperOrder Random ' +
	    '--runRNGseed 666 ' +
	    '--outSAMmultNmax 1 ' +
	    '--outFilterMismatchNoverReadLmax 0.04 ' +
	    '--alignIntronMin 20 ' +
	    '--alignIntronMax 1500000 ' +
	    '--alignMatesGapMax 1500000 ' +
	    '--alignSJoverhangMin 6 ' +
	    '--alignSJDBoverhangMin 1 ' +
	    '--readFilesIn {input.fq1} {input.fq2} ' +
	    '--outFileNamePrefix ' + project_dir + '/' + 
	    	star_GC_dir + '{wildcards.sample}/ ' + 
	    '--runThreadN 6 ' +
	    '--outFilterMatchNmin 76 ' +
	  	'--chimSegmentMin 25 ' +
	    '--chimJunctionOverhangMin 25 ' +
	    '--chimScoreMin 0 ' +
	    '--chimScoreDropMax 20 ' +
	    '--chimScoreSeparation 10 ' +
	    '--chimScoreJunctionNonGTAG -1 ' +
	    '--outSAMtype BAM Unsorted'


##########################################################################
### 2. Map ribo contamination ###
##########################################################################

rule star_ribo:
	input:
		fq1 = raw_files + '{sample}_1.fastq.gz',
		fq2 = raw_files + '{sample}_2.fastq.gz'
	output:
		star_ribo_dir + '{sample}/Log.final.out'
	threads: 6
	shell:
		'/home/jamtor/local/bin/STAR --runMode alignReads \
     	--readFilesCommand zcat \
     	--genomeDir ' + ref_dir +  \
  		' --outFilterType BySJout \
    	--outSAMattributes NH HI AS NM MD\
    	--outFilterMultimapNmax 999 \
     	--outMultimapperOrder Random \
     	--runRNGseed 666 \
     	--outSAMmultNmax 1 \
    	--outFilterMismatchNmax 999 \
    	--outFilterMismatchNoverReadLmax 0.04 \
    	--alignIntronMin 20 \
    	--alignIntronMax 1500000 \
    	--alignMatesGapMax 1500000 \
    	--alignSJoverhangMin 6 \
    	--alignSJDBoverhangMin 1 \
    	--readFilesIn {input.fq1} {input.fq2} \
    	--outFileNamePrefix ' + project_dir + '/' + 
	    	star_ribo_dir + '{wildcards.sample}/ ' +
    	'--runThreadN 6 \
    	--outFilterMatchNmin 76 \
      	--outSAMtype BAM Unsorted'


#############################################################
### 3. Sort bams by name ###
#############################################################

rule novosort:
	input:
		ribo = star_ribo_dir + '{sample}/Log.final.out',
		gc = star_GC_dir + '{sample}/Aligned.out.bam'
	output:
		star_GC_dir + '{sample}/Aligned.novosortedByName.out.bam'
	threads: 6
	shell:
		'/home/jamtor/local/bin/novocraft/novosort -t ' + 
		temp_sort_dir + ' -n -c 6 -m 22G {input.gc} > {output}; ' +
		'rm {input.gc}; ' +
		'rm ' + raw_files + '{wildcards.sample}_1.fastq.gz; ' +
		'rm ' + raw_files + '{wildcards.sample}_2.fastq.gz'



##########################################################################
### 4. Count GC genes ###
##########################################################################

rule htseq_gc:
	input:
		star_GC_dir + '{sample}/Aligned.novosortedByName.out.bam'
	output:
		htseq_dir + '{sample}.gc.htseq.txt'
	threads: 6
	shell:
		'source activate p2.7env; htseq-count -f bam -t exon -a 0 ' +
		'-s yes -m intersection-strict {input} ' + ref_dir + 
		'gencode_v24_hg38_annotation.gtf ' +
		'>> {output}'

##########################################################################
### 5. Count all repeat genes ###
##########################################################################

rule htseq_all:
	input:
		star_GC_dir + '{sample}/Aligned.novosortedByName.out.bam'
	output:
		htseq_dir + '{sample}.all.htseq.txt'
	threads: 6
	shell:
		'source activate p2.7env; htseq-count -f bam -i ID -t exon ' + 
		'--stranded=no -a 0 -m intersection-strict {input} ' + ref_dir +
		'repeats.hg38.gff ' +
		'>> {output}; touch ' + htseq_dir + '/all_counted'


##########################################################################
### 6. Count all repeat gene ids ###
##########################################################################

rule htseq_custom3:
	input:
		star_GC_dir + '{sample}/Aligned.novosortedByName.out.bam'
	output:
		htseq_dir + '{sample}.custom3.htseq.txt'
	threads: 6
	shell:
		'source activate p2.7env; htseq-count -f bam -i ID -t exon ' + 
		'--stranded=no -a 0 -m intersection-strict -o ' + htseq_dir + 
		'{wildcards.sample}.custom3.out.sam {input} ' +  ref_dir +
		'custom3.repeats.hg38.gff ' + '>> {output}; touch ' + htseq_dir + 
		'/all_repeats_counted'
